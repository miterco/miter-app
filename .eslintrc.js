module.exports = {
  root: true,
  extends: ['eslint:recommended', 'plugin:@typescript-eslint/eslint-recommended'],
  parser: '@typescript-eslint/parser',
  plugins: ['@typescript-eslint'],
  env: {
    es6: true,
    commonjs: true,
  },
  globals: {},
  rules: {
    // ==============================================================================================
    //                                AVOIDING POSSIBLE PROBLEMS
    // ----------------------------------------------------------------------------------------------
    //  Not all of these rules can be automatically fixed. That's why they are commented out and
    //  they will be uncommented in stages.
    // ==============================================================================================
    'array-callback-return': ['warn', {checkForEach: false}],
    // "constructor-super": "warn",
    'for-direction': 'warn',
    'getter-return': 'warn',
    // "no-async-promise-executor": "warn",
    // "no-await-in-loop": "warn",
    // "no-class-assign": "warn",
    // "no-compare-neg-zero": "warn",
    'no-cond-assign': 'warn',
    'no-const-assign': 'warn',
    // "no-constant-condition": "warn",
    // "no-constructor-return": "warn",
    // "no-control-regex": "warn",
    // "no-debugger": "warn",
    'no-dupe-args': 'warn',
    'no-dupe-class-members': 'warn',
    'no-dupe-else-if': 'warn',
    // "no-dupe-keys": "warn",
    // "no-duplicate-case": "warn",
    // "no-duplicate-imports": "warn",
    // "no-empty-character-class": "warn",
    // "no-empty-pattern": "warn",
    // "no-ex-assign": "warn",
    // "no-fallthrough": "warn",
    // "no-func-assign": "warn",
    // "no-import-assign": "warn",
    // "no-inner-declarations": "warn",
    // "no-invalid-regexp": "warn",
    // "no-irregular-whitespace": "warn",
    // "no-loss-of-precision": "warn",
    // "no-misleading-character-class": "warn",
    // "no-new-symbol": "warn",
    // "no-obj-calls": "warn",
    // "no-promise-executor-return": "off",
    // "no-prototype-builtins": "off",
    // "no-self-assign": "warn",
    // "no-self-compare": "warn",
    // "no-setter-return": "warn",
    // "no-sparse-arrays": "warn",
    // "no-template-curly-in-string": "warn",
    // "no-this-before-super": "warn",
    // "no-undef": "warn",
    // "no-unexpected-multiline": "warn",
    // "no-unmodified-loop-condition": "warn",
    // "no-unreachable": "warn",
    // "no-unreachable-loop": "warn",
    // "no-unsafe-finally": "warn",
    // "no-unsafe-negation": "warn",
    // "no-unsafe-optional-chaining": "warn",
    // "no-unused-private-class-members": "warn",
    'no-unused-vars': [
      'off',
      {
        //   varsIgnorePattern: "^_",
        //   argsIgnorePattern: "^_",
        //   caughtErrorsIgnorePattern: "^_",
      },
    ],
    // "no-use-before-define": "warn",
    // "no-useless-backreference": "warn",
    // "require-atomic-updates": "warn",
    // "use-isnan": "warn",
    // "valid-typeof":"warn"
    // 'require-await': 'error',

    // ==============================================================================================
    //                               CODE LAYOUT AND FORMATTING
    // ==============================================================================================
    //  This rules are all disabled since prettier already takes care of code formatting.
    // ----------------------------------------------------------------------------------------------
    'arrow-spacing': 'off',
    'block-spacing': 'off',
    'brace-style': 'off',
    'comma-dangle': 'off',
    'comma-spacing': 'off',
    'comma-style': 'off',
    'computed-property-spacing': 'off',
    'dot-location': 'off',
    'eol-last': 'off',
    'func-call-spacing': 'off',
    'implicit-arrow-linebreak': 'off',
    indent: 'off',
    'key-spacing': 'off',
    'keyword-spacing': 'off',
    'lines-between-class-members': 'off',
    'max-len': 'off',
    'max-statements-per-line': 'off',
    'multiline-ternary': 'off',
    'new-parens': 'off',
    'newline-per-chained-call': 'off',
    'no-mixed-spaces-and-tabs': 'off',
    'no-multi-spaces': 'off',
    'no-multiple-empty-lines': 'off',
    'no-trailing-spaces': 'off',
    'no-whitespace-before-property': 'off',
    'nonblock-statement-body-position': 'off',
    'object-curly-newline': 'off',
    'object-property-newline': 'off',
    'operator-linebreak': 'off',
    'padded-blocks': 'off',
    'padding-line-between-statements': 'off',
    quotes: 'off',
    'rest-spread-spacing': 'off',
    semi: 'off',
    'semi-spacing': 'off',
    'semi-style': 'off',
    'space-before-blocks': 'off',
    'space-before-function-paren': 'off',
    'space-in-parens': 'off',
    'space-infix-ops': 'off',
    'space-unary-ops': 'off',
    'switch-colon-spacing': 'off',
    'template-curly-spacing': 'off',
    'template-tag-spacing': 'off',
    'wrap-iife': 'off',
    'yield-star-spacing': 'off',

    // ==============================================================================================
    //                                        OTHER RULES
    // ==============================================================================================
    // "capitalized-comments": ["warn", "always"],
    'no-empty': 'off',
    curly: ['warn', 'multi-line'],
    'dot-notation': [
      'warn',
      {
        // allowPattern: "",  // Add exceptions here.
      },
    ],
    eqeqeq: ['warn', 'always'],
    // "no-else-return": "warn",
    'no-extra-boolean-cast': 'warn',
    'no-extra-label': 'warn',
    'no-extra-semi': 'warn',
    'no-floating-decimal': 'warn',
    'no-implicit-coercion': 'warn',
    'no-lonely-if': 'warn',
    'no-regex-spaces': 'warn',
    'no-unneeded-ternary': 'warn',
    'no-unused-labels': 'warn',
    'no-useless-computed-key': 'warn',
    'no-useless-rename': 'warn',
    'no-useless-return': 'warn',
    'no-var': 'warn',
    'object-shorthand': ['warn', 'always'],
    'one-var': ['warn', 'never'],
    'operator-assignment': ['warn', 'always'],
    'prefer-arrow-callback': 'warn',
    'prefer-const': 'warn',
    'prefer-destructuring': [
      'warn',
      {
        array: false,
        object: true,
      },
    ],
    'prefer-numeric-literals': 'warn',
    'prefer-template': 'warn',
    // 'quote-props': ['warn', 'consistent-as-needed'],
    'spaced-comment': [
      'warn',
      'always',
      {
        exceptions: ['-', '='],
        markers: ['/'],
      },
    ],
    yoda: ['warn', 'never'],
  },
};
