import {Topic} from 'miter-common/SharedTypes';
import {useMemo} from 'react';
import './TopicShape.less';

const UnsavedShapeContent = (
  <path
    fillRule="evenodd"
    clipRule="evenodd"
    d="M10.2207 1.9041C10.7994 1.80272 11.3941 1.75 12 1.75C12.6059 1.75 13.2006 1.80272 13.7793 1.9041C14.4593 2.02322 14.914 2.67104 14.7949 3.35104C14.6758 4.03104 14.028 4.48572 13.348 4.3666C12.911 4.29006 12.4607 4.25 12 4.25C11.5393 4.25 11.089 4.29006 10.652 4.3666C9.97204 4.48572 9.32422 4.03104 9.2051 3.35104C9.08598 2.67104 9.54066 2.02322 10.2207 1.9041ZM16.1392 3.9091C16.5357 3.34394 17.3152 3.20717 17.8804 3.60363C18.8582 4.28954 19.7105 5.1418 20.3964 6.11959C20.7928 6.68476 20.6561 7.46431 20.0909 7.86076C19.5257 8.25722 18.7462 8.12046 18.3497 7.55529C17.8305 6.81506 17.1849 6.16954 16.4447 5.65027C15.8795 5.25382 15.7428 4.47427 16.1392 3.9091ZM7.86076 3.9091C8.25722 4.47427 8.12046 5.25382 7.55529 5.65028C6.81506 6.16954 6.16954 6.81506 5.65027 7.55529C5.25382 8.12046 4.47427 8.25722 3.9091 7.86077C3.34394 7.46431 3.20717 6.68476 3.60363 6.11959C4.28954 5.1418 5.1418 4.28954 6.11959 3.60363C6.68476 3.20717 7.46431 3.34394 7.86076 3.9091ZM20.649 9.2051C21.329 9.08598 21.9768 9.54066 22.0959 10.2207C22.1973 10.7994 22.25 11.3941 22.25 12C22.25 12.6059 22.1973 13.2006 22.0959 13.7793C21.9768 14.4593 21.329 14.914 20.649 14.7949C19.969 14.6758 19.5143 14.028 19.6334 13.348C19.7099 12.911 19.75 12.4607 19.75 12C19.75 11.5393 19.7099 11.089 19.6334 10.652C19.5143 9.97204 19.969 9.32422 20.649 9.2051ZM3.35104 9.2051C4.03104 9.32422 4.48572 9.97204 4.3666 10.652C4.29006 11.089 4.25 11.5393 4.25 12C4.25 12.4607 4.29006 12.911 4.3666 13.348C4.48572 14.028 4.03104 14.6758 3.35104 14.7949C2.67104 14.914 2.02322 14.4593 1.9041 13.7793C1.80272 13.2006 1.75 12.6059 1.75 12C1.75 11.3941 1.80272 10.7994 1.9041 10.2207C2.02322 9.54066 2.67104 9.08598 3.35104 9.2051ZM20.0909 16.1392C20.6561 16.5357 20.7928 17.3152 20.3964 17.8804C19.7105 18.8582 18.8582 19.7105 17.8804 20.3964C17.3152 20.7928 16.5357 20.6561 16.1392 20.0909C15.7428 19.5257 15.8795 18.7462 16.4447 18.3497C17.1849 17.8305 17.8305 17.1849 18.3497 16.4447C18.7462 15.8795 19.5257 15.7428 20.0909 16.1392ZM3.9091 16.1392C4.47427 15.7428 5.25382 15.8795 5.65028 16.4447C6.16954 17.1849 6.81506 17.8305 7.55529 18.3497C8.12046 18.7462 8.25722 19.5257 7.86077 20.0909C7.46431 20.6561 6.68476 20.7928 6.11959 20.3964C5.1418 19.7105 4.28954 18.8582 3.60363 17.8804C3.20717 17.3152 3.34394 16.5357 3.9091 16.1392ZM9.2051 20.649C9.32422 19.969 9.97204 19.5143 10.652 19.6334C11.089 19.7099 11.5393 19.75 12 19.75C12.4607 19.75 12.911 19.7099 13.348 19.6334C14.028 19.5143 14.6758 19.969 14.7949 20.649C14.914 21.329 14.4593 21.9768 13.7793 22.0959C13.2006 22.1973 12.6059 22.25 12 22.25C11.3941 22.25 10.7994 22.1973 10.2207 22.0959C9.54066 21.9768 9.08598 21.329 9.2051 20.649Z"
  />
);

const ShapeContent = [
  <rect
    x="9.52136"
    y="1.33691"
    width="12.2918"
    height="18"
    rx="4"
    transform="rotate(18 9.52136 1.33691)"
    fill="#F2C177"
    stroke="white"
    strokeOpacity="0.67"
    strokeWidth="0.5"
  />,
  <path
    d="M13.3455 5.47645C14.4897 4.44625 16.32 5.04096 16.6401 6.54692L18.8908 17.1357C19.2109 18.6416 17.7807 19.9294 16.3164 19.4536L6.02096 16.1084C4.55671 15.6326 4.15658 13.7502 5.30073 12.72L13.3455 5.47645Z"
    fill="#CD86D9"
    stroke="white"
    strokeOpacity="0.67"
    strokeWidth="0.5"
  />,
  <path
    d="M6.76026 6.05256C7.27226 4.47679 8.96472 3.61444 10.5405 4.12644L17.9479 6.53324C19.5236 7.04524 20.386 8.7377 19.874 10.3135L17.4672 17.7208C16.9552 19.2966 15.2627 20.159 13.687 19.647L6.27958 17.2402C4.70382 16.7282 3.84146 15.0357 4.35346 13.4599L6.76026 6.05256Z"
    fill="#7CCF87"
    stroke="white"
    strokeOpacity="0.67"
    strokeWidth="0.5"
  />,
  <path
    d="M13.0488 4.45469C14.2849 4.05307 15.639 4.49305 16.4029 5.54451L20.0595 10.5773C20.8234 11.6288 20.8234 13.0526 20.0595 14.104L16.4029 19.1368C15.639 20.1883 14.2849 20.6283 13.0488 20.2266L7.13241 18.3043C5.89634 17.9026 5.05946 16.7508 5.05946 15.4511L5.05946 9.23022C5.05946 7.93054 5.89634 6.77868 7.13241 6.37705L13.0488 4.45469Z"
    fill="#5ECFD6"
    stroke="white"
    strokeOpacity="0.67"
    strokeWidth="0.5"
  />,
  <path
    d="M13.4276 4.14127C14.4759 3.91843 15.5636 4.27182 16.2807 5.06832L19.985 9.18229C20.7021 9.97879 20.9399 11.0974 20.6087 12.1167L18.898 17.3817C18.5668 18.401 17.717 19.1662 16.6686 19.3891L11.2537 20.5401C10.2053 20.7629 9.11766 20.4095 8.40049 19.613L4.69625 15.499C3.97908 14.7025 3.74131 13.5839 4.07252 12.5646L5.7832 7.29964C6.11441 6.2803 6.96426 5.51508 8.01264 5.29224L13.4276 4.14127Z"
    fill="#DB9191"
    stroke="white"
    strokeOpacity="0.67"
    strokeWidth="0.5"
  />,
  <path
    d="M13.6026 2.93009C14.161 2.07835 15.4866 2.50905 15.4377 3.52636L15.0893 10.7811C15.081 10.9534 15.1175 11.125 15.1952 11.2791L18.4642 17.7649C18.9226 18.6744 17.8868 19.607 17.0303 19.056L10.9217 15.1269C10.7766 15.0336 10.6097 14.9794 10.4375 14.9696L3.18609 14.5578C2.16924 14.5 1.87946 13.1367 2.7849 12.6704L9.24186 9.34477C9.39528 9.26576 9.52564 9.14838 9.62026 9.00406L13.6026 2.93009Z"
    fill="#B7D17D"
    stroke="white"
    strokeOpacity="0.67"
    strokeWidth="0.5"
  />,
  <path
    d="M13.9114 3.50608C14.4751 2.68372 15.7633 3.10228 15.7359 4.09889L15.5787 9.82225C15.5693 10.1617 15.7329 10.4826 16.0129 10.6746L20.7357 13.9115C21.558 14.4751 21.1395 15.7633 20.1428 15.7359L14.4195 15.5787C14.0801 15.5694 13.7591 15.7329 13.5672 16.013L10.3303 20.7357C9.76664 21.558 8.47843 21.1395 8.50581 20.1429L8.66305 14.4195C8.67237 14.0801 8.50884 13.7592 8.22877 13.5672L3.50606 10.3303C2.68369 9.76667 3.10226 8.47845 4.09887 8.50583L9.82222 8.66308C10.1616 8.6724 10.4826 8.50887 10.6745 8.2288L13.9114 3.50608Z"
    fill="#B8A293"
    stroke="white"
    strokeOpacity="0.67"
    strokeWidth="0.5"
  />,
];

export interface TopicShapeProps {
  topic: Topic | null;
  style?: React.CSSProperties;
}

let _nextShapeIndex = 0;
const _shapeIndexMap: Record<string, number> = {};

const TopicShape: React.FC<TopicShapeProps> = ({topic, style}) => {
  const imageContent = useMemo((): React.ReactElement => {
    // We want to maximize the chance that each topic has its own shape, while keeping them
    // consistent across reorders. We use a simple map to do that. This is definitely an MVPish
    // implementation, since this won't be consistent across loads or clients. If we keep the shapes,
    // we'll want to move this to the server and probably stick it in a Redis cache or something.

    if (!topic) return UnsavedShapeContent; // Unsaved topics get their own shape
    if (_shapeIndexMap[topic.id] === undefined) {
      // First time we've seen this topic this run of the app; assign a shape index
      _shapeIndexMap[topic.id] = _nextShapeIndex;
      _nextShapeIndex++;
    }
    return ShapeContent[_shapeIndexMap[topic.id] % ShapeContent.length];
  }, [topic]);

  return (
    <span className={`TopicShape${topic ? '' : ' NoVal'}`} style={style}>
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        {imageContent}
      </svg>
    </span>
  );
};

export default TopicShape;
